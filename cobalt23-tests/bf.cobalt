function cleanbf(bf){
    // Remove all none:
    /*
        - + > < . , [ ]
    */
    var newbf = "";
    for (i = 1, #bf){
        var c = string.sub(bf, i, i);
        if (c == "-" || c == "+" || c == ">" || c == "<" || c == "." || c == "," || c == "[" || c == "]"){
            newbf = newbf..c;
        }
    }

    return newbf
}
function interpret(bf) {
    bf = cleanbf(bf)
    var mem = {};
    var ptr = 1;
    var i = 1;

    while( i <= #bf ) {
        var c = string.sub(bf, i, i);

        if( c == ">" ) {
            ++ptr    ;
        } else if( c == "<" ) {
            --ptr    ;
        } else if( c == "+" ) {
            mem[ptr] = (mem[ptr] || 0) + 1;
        } else if( c == "-" ) {
            mem[ptr] = (mem[ptr] || 0) - 1;
        } else if( c == "." ) {
            io.write(string.char(mem[ptr] || 0));
        } else if( c == "," ) {
            mem[ptr] = io.read(1)->byte();
        } else if( c == "[" ) {
            if( ! mem[ptr] || mem[ptr] == 0 ) {
                var count = 1;
                while( count > 0 ) {
                    ++i    ;
                    if( string.sub(bf, i, i) == "[" ) {
                        ++count    ;
                    } else if( string.sub(bf, i, i) == "]" ) {
                        --count    ;
                    }
                }
            }
        } else if( c == "]" ) {
            if( mem[ptr] && mem[ptr] != 0 ) {
                var count = 1;
                while( count > 0 ) {
                    --i    ;
                    if( string.sub(bf, i, i) == "]" ) {
                        ++count    ;
                    } else if( string.sub(bf, i, i) == "[" ) {
                        --count    ;
                    }
                }
            }
        }

        ++i    ;
    }
}