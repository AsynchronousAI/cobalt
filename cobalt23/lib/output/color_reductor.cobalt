var ColorReductor = {};

var ColorHelper = require ('helpers.color');
var TableHelper = require ('helpers.table');
var ANSI = require ('ansi');

ColorReductor['COLOR_PALETTES'] = {
  [256] = require ('reductor.256_vga'),
  [16]  = require ('reductor.16_vga'),
  [8]   = {}
};

ColorReductor['COLOR_PALETTES'][8] = TableHelper.pack(TableHelper.unpack(
  ColorReductor['COLOR_PALETTES'][16], 1, 8
));

function ColorReductor.rgb_to_code(rgb) {
  var result = ColorHelper.nearest(rgb, ColorReductor['COLOR_PALETTES'][256]);
  return result.colors[1].code;
}

function ColorReductor.code_to_sgr(sgr_code, color_code, colors) {
  var result = ColorHelper.nearest(
    ColorReductor['COLOR_PALETTES'][256][color_code].rgb,
    colors
  );
  var color_index = result.colors[1].code;

  if( color_index > 8 ) {
    color_index -=   8;
  }

  --color_index    ;

  var color;

  if( sgr_code == ANSI.SGR_CODES.color ) {
    if( result.colors[1].code > 8 ) {
      color = 90 + color_index;
    } else {
      color = 30 + color_index;
    }
  } else if( sgr_code == ANSI.SGR_CODES.background ) {
    if( result.colors[1].code > 8 ) {
      color = 100 + color_index;
    } else {
      color = 40 + color_index;
    }
  }

  return color;
}

function ColorReductor.code_to_sgr_16(sgr_code, color_code) {
  return ColorReductor.code_to_sgr(sgr_code, color_code, ColorReductor['COLOR_PALETTES'][16]);
}

function ColorReductor.code_to_sgr_8(sgr_code, color_code) {
  return ColorReductor.code_to_sgr(sgr_code, color_code, ColorReductor['COLOR_PALETTES'][8]);
}

return ColorReductor;
