/* Snow fall demo */

var output  =   import("output")                      /* Rendering */
var Vector2 =   import("Vector2")                     /* JIT Compatability */
var Color   =   import("Color")                       /* JIT Compatability */
var colors  =   import("helpers.color_names_by_key")  /* Color database */
var async   =   import("async")                       /* JIT Compatability */


/* Config */
var color = "_night_snow"
var size  = Vector2.new(80, 40)

/* Create a new canvas */
output.Canvas.space(size, Color.new(colors[color].rgb[1], colors[color].rgb[2], colors[color].rgb[3], 1.0))

/* Render Engine class */
// I could have used typedef but I wanted to try the older OOP style
Engine = { 
    "data": {}
}
{
    function Engine::init(this){
        for (i = 1, size.X){
            this.data[i] = 0
        }

    }
    function Engine::add(this, x){
        // Renders a new snow particle and animates it falling down and then adds it to the data table
        this.data[x] += 1

        // Begin falling from Y axis
        code = [=[
            output = import("output")
            Vector2 = import("Vector2")
            Color = import("Color")
            colors = import("helpers.color_names_by_key")

            var backcolor = Color.new(]=]..colors[color].rgb[1]..[=[, ]=]..colors[color].rgb[2]..[=[, ]=]..colors[color].rgb[3]..[=[)
            var x = ]=]..x..[=[
            var size = Vector2.new(]=]..size.X..[=[, ]=]..size.Y..[=[)
            var height = size.Y
            var color = "]=]..color..[=["
            var zero = "\u{200B}"
            while (mwait(100)){
                // Clear old 
                if (height != size.Y) {
                    output.Canvas.relpos(Vector2.new(x, (height+1))) // Move cursor to where we are placing
                    io.write(output.Output.new(backcolor,"\u{2588}"))
                    output.Canvas.reset() // Reset position
                }
                // Make new
                output.Canvas.relpos(Vector2.new(x, height)) // Move cursor to where we are placing
                io.write("\u{2588}")
                output.Canvas.reset() // Reset position
                height-=1 // Move down

                if(height == 0) {
                    break
                }
            }}
        ]=]
        async.new(code)->start()
    }
}

/* Main thread */
// Evey 100ms add a new snow particle at a random X position
Engine->init(Engine)
while (mwait(100)){
    // Add a new snow particle
    var x = math.random(1, size.X)
    Engine->add(Engine, x)
}